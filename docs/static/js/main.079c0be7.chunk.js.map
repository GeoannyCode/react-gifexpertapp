{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACA,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBkB,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,sBAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,6BAAMA,QCJLS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAK,SAAAhB,GAEFc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAItB,CAACtB,IAEGuB,EDjB0BI,CAAc3B,GAAlCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACQ,qCACA,6BAAMtB,IAELsB,GAAW,mBAAGJ,UAAW,oBAAd,wBAEZ,qBAAKA,UAAU,2BAAf,SAEYL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eACIA,GADgBA,EAAIC,aEbvCiB,EAAe,WAExB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,oBAAIiC,UAAU,aAAd,4BACA,cAAC,EAAD,CAAajC,cAAgBA,IAC7B,uBAIJ,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCnB9B8B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.079c0be7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) =>{\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) =>{\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('')\n        }\n    }\n\n    return(\n        <form onSubmit={ handleSubmit }>\n        <input\n            type='text'\n            value={ inputValue }\n            onChange={ handleInputChange}\n        ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=EwHrTIq2W5maFZNsT4JFfS52ttc3gLhi`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    console.log(id, title, url)\n\n    return(\n        <div className='card animate__flash'>\n            <img src={ url } alt={ title }/>\n            <h3>{ title }</h3>\n        </div>\n    )\n}","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ( {category} ) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return(\n            <>\n            <h3>{ category }</h3>\n\n            {loading && <p className =\"animate__bounceIn\">Loading...</p> }\n\n            <div className=\"card-grid animate__flash\">\n                    {\n                        images.map( img => (\n                            <GifGridItem key = {img.id}\n                            {...img }/>\n\n                        ))\n                    }\n            </div>\n            </>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then(img => {\n\n                setState({\n                    data: img,\n                    loading: false\n                });\n            });\n\n    }, [category])\n\n    return state; // { data[], loading: true  };\n\n}","import React, { useState }from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([])\n\n    // const handleAdd = () => {\n    //     setCategories( cats => [...categories,'Chia'] );\n    // }\n\n    return(\n        <>\n            <h2 className=\"title_page\"> GifExpertApp </h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n\n\n        <ol>\n            {\n                categories.map( category => (\n                    <GifGrid\n                        key={ category }\n                        category={ category }\n                    />\n                ))\n            }\n        </ol>\n\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}